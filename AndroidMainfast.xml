<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">


    <!-- أذونات الإنترنت و NFC -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.NFC" />
    <uses-feature android:name="android.hardware.nfc" android:required="true" />



    <application
        android:usesCleartextTraffic="true"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@drawable/icon"
        android:label="@string/app_name"
        android:roundIcon="@drawable/icon"
        android:supportsRtl="true"
        android:theme="@style/Theme.Rebo"
        tools:targetApi="31">
        <activity
            android:configChanges="orientation|screenSize|keyboardHidden"
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:theme="@style/Theme.Rebo">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>


package sd.bashaer.reboo;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import org.json.JSONObject;

import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONObject;

public class LoginActivity extends AppCompatActivity {

    private EditText emailInput, passwordInput;
    private TextView loginMessage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        emailInput = findViewById(R.id.emailInput);
        passwordInput = findViewById(R.id.passwordInput);
        loginMessage = findViewById(R.id.loginMessage);

        Button loginButton = findViewById(R.id.loginButton);

        // تسجيل الدخول بالبريد الإلكتروني وكلمة المرور
        loginButton.setOnClickListener(v -> authenticateUser());
    }

    private void authenticateUser() {
        String email = emailInput.getText().toString();
        String password = passwordInput.getText().toString();

        if (email.isEmpty() || password.isEmpty()) {
            loginMessage.setText("يرجى إدخال البريد الإلكتروني وكلمة المرور.");
            return;
        }

        new Thread(() -> {
            try {
                URL url = new URL("http://192.168.88.74/new%20folder/finch/login.php");
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("POST");
                connection.setRequestProperty("Content-Type", "application/json");
                connection.setDoOutput(true);

                JSONObject loginData = new JSONObject();
                loginData.put("email", email);
                loginData.put("password", password);

                OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream());
                writer.write(loginData.toString());
                writer.flush();

                int responseCode = connection.getResponseCode();
                if (responseCode == HttpURLConnection.HTTP_OK) {
                    // قراءة الرد من الخادم
                    StringBuilder response = new StringBuilder();
                    BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                    String inputLine;
                    while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                    in.close();

                    // عرض الرد الذي تم استلامه
                    runOnUiThread(() -> {
                        loginMessage.setText("تم تسجيل الدخول بنجاح!");
                        Toast.makeText(this, "Response: " + response.toString(), Toast.LENGTH_LONG).show();
                        loadMainPage();
                    });
                } else {
                    // قراءة الخطأ من الخادم
                    StringBuilder errorResponse = new StringBuilder();
                    BufferedReader errorReader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
                    String errorLine;
                    while ((errorLine = errorReader.readLine()) != null) {
                        errorResponse.append(errorLine);
                    }
                    errorReader.close();

                    // عرض الخطأ
                    runOnUiThread(() -> loginMessage.setText("البريد الإلكتروني أو كلمة المرور غير صحيحة.\n" + errorResponse.toString()));
                }
            } catch (Exception e) {
                e.printStackTrace();
                runOnUiThread(() -> loginMessage.setText("حدث خطأ في الاتصال بالخادم." + e.getMessage()));
            }
        }).start();

    }

    private void loadMainPage() {
        Intent intent = new Intent(this, MainActivity.class);
        startActivity(intent);
        finish();
    }
}






package sd.bashaer.reboo;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

public class LoginActivity extends AppCompatActivity {

    private EditText emailInput, passwordInput;
    private TextView loginMessage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        emailInput = findViewById(R.id.emailInput);
        passwordInput = findViewById(R.id.passwordInput);
        loginMessage = findViewById(R.id.loginMessage);

        Button loginButton = findViewById(R.id.loginButton);

        // تسجيل الدخول بالبريد الإلكتروني وكلمة المرور
        loginButton.setOnClickListener(v -> authenticateUser());
    }

    private void authenticateUser() {
        String email = emailInput.getText().toString();
        String password = passwordInput.getText().toString();

        if (email.isEmpty() || password.isEmpty()) {
            loginMessage.setText("يرجى إدخال البريد الإلكتروني وكلمة المرور.");
            return;
        }

        Log.d("Login", "Email: " + email);
        Log.d("Login", "Password: " + password);

        new Thread(() -> {
            try {
                URL url = new URL("http://192.168.88.74/new%20folder/finch/login.php");
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("POST");
                connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                connection.setDoOutput(true);

                String data = "email=" + email + "&password=" + password;
                OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream());
                writer.write(data);
                writer.flush();

                int responseCode = connection.getResponseCode();
                if (responseCode == HttpURLConnection.HTTP_OK) {
                    BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                    StringBuilder response = new StringBuilder();
                    String inputLine;
                    while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                    in.close();

                    // تحليل الاستجابة JSON
                    JSONObject responseJson = new JSONObject(response.toString());
                    if (responseJson.getBoolean("success")) {
                        runOnUiThread(() -> {
                            loginMessage.setText("تم تسجيل الدخول بنجاح!");
                            // الانتقال إلى صفحة index.html أو الصفحة المطلوبة
                            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                            startActivity(intent);
                            finish();
                        });
                    } else {
                        String errorMessage = responseJson.getString("error");
                        runOnUiThread(() -> loginMessage.setText("خطأ: " + errorMessage));
                    }
                } else {
                    runOnUiThread(() -> loginMessage.setText("فشل الاتصال بالخادم"));
                }
            } catch (Exception e) {
                e.printStackTrace();
                runOnUiThread(() -> loginMessage.setText("حدث خطأ في الاتصال بالخادم."));
            }
        }).start();
    }
}


package sd.bashaer.reboo;

import android.os.Bundle;
import android.webkit.WebView;
import android.webkit.WebViewClient;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private WebView webView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = findViewById(R.id.webView);
        webView.getSettings().setJavaScriptEnabled(true);
        webView.setWebViewClient(new WebViewClient());
        webView.loadUrl("http://192.168.88.74/new%20folder/finch/index.html");  // المسار الخاص بملف index.html
    }
}


package sd.bashaer.reboo;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

public class LoginActivity extends AppCompatActivity {

    private EditText emailInput, passwordInput;
    private TextView loginMessage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        emailInput = findViewById(R.id.emailInput);
        passwordInput = findViewById(R.id.passwordInput);
        loginMessage = findViewById(R.id.loginMessage);

        Button loginButton = findViewById(R.id.loginButton);

        // تسجيل الدخول بالبريد الإلكتروني وكلمة المرور
        loginButton.setOnClickListener(v -> authenticateUser());
    }

    private void authenticateUser() {
        String email = emailInput.getText().toString();
        String password = passwordInput.getText().toString();

        if (email.isEmpty() || password.isEmpty()) {
            loginMessage.setText("يرجى إدخال البريد الإلكتروني وكلمة المرور.");
            return;
        }

        Log.d("Login", "Email: " + email);
        Log.d("Login", "Password: " + password);

        new Thread(() -> {
            try {
                URL url = new URL("http://192.168.88.74/new%20folder/finch/login.php");
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("POST");
                connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                connection.setDoOutput(true);

                String data = "email=" + email + "&password=" + password;
                OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream());
                writer.write(data);
                writer.flush();

                int responseCode = connection.getResponseCode();
                if (responseCode == HttpURLConnection.HTTP_OK) {
                    BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                    StringBuilder response = new StringBuilder();
                    String inputLine;
                    while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                    in.close();

                    // تحليل الاستجابة JSON
                    JSONObject responseJson = new JSONObject(response.toString());
                    if (responseJson.getBoolean("success")) {
                        runOnUiThread(() -> {
                            loginMessage.setText("تم تسجيل الدخول بنجاح!");
                            // الانتقال إلى صفحة index.html أو الصفحة المطلوبة
                            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                            startActivity(intent);
                            finish();
                        });
                    } else {
                        String errorMessage = responseJson.getString("error");
                        runOnUiThread(() -> loginMessage.setText("خطأ: " + errorMessage));
                    }
                } else {
                    runOnUiThread(() -> loginMessage.setText("فشل الاتصال بالخادم"));
                }
            } catch (Exception e) {
                e.printStackTrace();
                runOnUiThread(() -> loginMessage.setText("حدث خطأ في الاتصال بالخادم."));
            }
        }).start();
    }
}